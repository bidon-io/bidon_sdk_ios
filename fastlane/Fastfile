default_platform :ios

fastlane_require 'dotenv'

# Global variables
$root_dir = File.expand_path(Dir.pwd + "/..")
$build_dir = File.expand_path($root_dir + "/build")
$podspecs_dir = $build_dir + '/Podspecs'
$scheme = "Release"
$targets = [
  "BidOn",
  "BidOnAdapterBidMachine",
  "BidOnAdapterGoogleMobileAds",
  "BidOnAdapterAppLovin"
]

# Defenitions ###
def build_universal(scheme)
  xcargs = [
   "GCC_GENERATE_DEBUGGING_SYMBOLS=NO",
    "STRIP_INSTALLED_PRODUCT=YES",
    "LINK_FRAMEWORKS_AUTOMATICALLY=NO",
    "BUILD_LIBRARY_FOR_DISTRIBUTION=YES",
    "OTHER_CFLAGS=\"-Qunused-arguments\"",
    "ONLY_ACTIVE_ARCH=NO",
    "DEPLOYMENT_POSTPROCESSING=YES",
    "MACH_O_TYPE=staticlib",
    "IPHONEOS_DEPLOYMENT_TARGET=11.0",
    "DEBUG_INFORMATION_FORMAT=\"dwarf\"",
    "SKIP_INSTALL=NO",
    "SKIP_INSTALL=NO",
    "CODE_SIGN_IDENTITY=\"\"",
    "CODE_SIGNING_REQUIRED=NO",
    "CODE_SIGN_ENTITLEMENTS=\"\""
  ]

  xcodebuild(
    archive: true,
    archive_path: "#{$build_dir}/#{scheme}/archives/ios.xcarchive",
    scheme: scheme,
    workspace: "BidOn.xcworkspace",
    sdk: "iphoneos",
    xcargs: (xcargs + [ "VALID_ARCHS=\"arm64 armv7\"" ]).join(" ")
  )

  xcodebuild(
    archive: true,
    archive_path: "#{$build_dir}/#{scheme}/archives/ios-sim.xcarchive",
    scheme: scheme,
    workspace: "BidOn.xcworkspace",
    sdk: "iphonesimulator",
    xcargs: (xcargs + [ "VALID_ARCHS=\"x86_64 arm64\"" ]).join(" ")
  )
end


def xcframework(scheme, target, framework, version)
  create_xcframework(
    frameworks: [
      "#{$build_dir}/#{scheme}/archives/ios-sim.xcarchive/Products/Library/Frameworks/#{framework}.framework",
      "#{$build_dir}/#{scheme}/archives/ios.xcarchive/Products/Library/Frameworks/#{framework}.framework"
    ],
    output: "#{$build_dir}/#{scheme}/#{target}-#{version}/#{framework}.xcframework"
  )
end


platform :ios do
  before_all do
    clean_build_artifacts
    FileUtils.rm_rf($build_dir)
    FileUtils.mkdir($build_dir)
    FileUtils.mkdir($podspecs_dir)
  end

  desc "Build all modules into xcframeworks"
  lane :sdk do |options|
    raise "No SDK version specified".red if options[:version].nil?
    
    upload = options[:upload] || false
    version = options[:version]
    adapters_version = options[:adapters_version] || version + '.1'

    cocoapods(use_bundle_exec: true)
    build_universal($scheme)

    $targets.each do |target|
      is_adapter = target.start_with?("BidOnAdapter")
      ver = is_adapter ? adapters_version : version
      
      xcframework($scheme, target, target, ver)

      zip(
        path: "#{$build_dir}/#{$scheme}/#{target}-#{ver}",
        output_path: "#{$build_dir}/#{$scheme}/#{target}-#{ver}/#{target}.zip"
      )

      aws_s3(
        region: "us-west-1",
        acl: "public-read",
        path: "BidOn/#{target}/#{ver}",
        files: [ "#{$build_dir}/#{$scheme}/#{target}-#{ver}/#{target}.zip" ]
      ) if upload

      podspec(
        name: target,
        version: ver,
        sdk_version: version,
        podfile: $root_dir + '/Podfile',
        path: $podspecs_dir,
        vendored_frameworks: [ "#{target}-#{ver}/#{target}.xcframework" ],
        is_adapter: is_adapter
      )
    end
  end
end